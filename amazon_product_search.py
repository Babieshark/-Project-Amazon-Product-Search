# -*- coding: utf-8 -*-
"""Amazon Product Search.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bdKSvV5GxTSU1MEqIgWS-FlMSUE8KsiH
"""

import pandas as pd
import numpy as np
from nltk.stem.porter import PorterStemmer
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import pickle
from pathlib import Path

fashion = pd.read_csv("Amazon Fashion.csv")
# path = r'C:\Users\saniya\OneDrive\Desktop\Projects\ML_Product_Search\archive'  # or unix / linux / mac path

# # Get the files from the path provided in the OP
# files = Path(path).glob('*.csv')  # .rglob to get subdirectories

# dfs = list()
# for f in files:
#     data = pd.read_csv(f)
#     # .stem is method for pathlib objects to get the filename w/o the extension
#     data['file'] = f.stem
#     dfs.append(data)

# fashion = pd.concat(dfs, ignore_index=True)

pd.set_option('display.max_colwidth', None)

fashion.head(1)

fashion.isna().sum()

fashion.duplicated().sum()

fashion['#keywords'] = fashion['name'].str.lower()

fashion.head(2)

fashion['#keywords']

fashion.columns

print(fashion['main_category'].value_counts())
print(fashion['sub_category'].value_counts())

fashion.drop(['main_category', 'sub_category'], axis=1, inplace=True)

fashion

fashion['#keywords'] = fashion['#keywords'].str.replace('''[^\w\d\s]''','', regex = True)

fashion['#keywords']

stemmer = PorterStemmer()

def stemming(text):
    words = []
    for word in text.split(' '):
        words.append(stemmer.stem(word))
    return ' '.join(words)

fashion['#keywords'] = fashion['#keywords'].apply(stemming)

fashion['#keywords']

cv = CountVectorizer(max_features = 5000, stop_words = 'english', dtype = np.uint8)

cv.fit(fashion['#keywords'])

vector = cv.transform(fashion['#keywords']).toarray()

vector.shape

similarity = cosine_similarity(vector)

del(vector)
fashion.drop(['#keywords'], axis=1, inplace=True)

similarity.shape

similarity[0]

fashion['name'].sample(10, random_state=5)

product = "Fastrack Trendies Analog Pink Dial Women's Watch-NL68006PP04/NP68006PP04"
fashion[fashion['name'] == product]

pickle.dump(similarity, open('similarity.pkl', 'wb'))

pickle.dump(fashion, open('data.pkl', 'wb'))